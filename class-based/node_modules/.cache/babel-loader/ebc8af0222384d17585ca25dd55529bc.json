{"ast":null,"code":"import _toConsumableArray from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\projects\\\\class-based\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\projects\\\\class-based\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      persons: [{\n        id: '1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: '2',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: '3',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    _this.changeNameHandler = function (event, id) {\n      // find index by id\n      var personIndex = _this.state.persons.findIndex(function (p) {\n        return p.id === id;\n      }); //get copy of person from state by index\n\n\n      var person = _objectSpread({}, _this.state.persons[personIndex]); //set new value for name\n\n\n      person.name = event.target.value; //get copy of person object fom state\n\n      var persons = _toConsumableArray(_this.state.persons); //get\n\n\n      persons[personIndex] = person;\n\n      _this.setState({\n        persons: persons\n      });\n    };\n\n    _this.toggelShowPesrons = function () {\n      var isShow = _this.state.showPersons;\n\n      _this.setState({\n        showPersons: !isShow\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"deletePersonHandler\",\n    value: function deletePersonHandler(personIndex) {\n      var persons = _toConsumableArray(this.state.persons);\n\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var btnStyle = {\n        backgroundColor: 'green',\n        color: '#fff',\n        font: 'inherit',\n        border: '1px solid blue',\n        padding: '8px',\n        cursor: 'pointer',\n        ':hover': {\n          backgroundColor: 'lightgreen',\n          color: 'black'\n        }\n      };\n      var classs = [];\n\n      if (this.state.persons.length <= 2) {\n        classs.push('red');\n      }\n\n      if (this.state.persons.length <= 1) {\n        classs.push('bold');\n      }\n\n      var personList = null;\n\n      if (this.state.showPersons) {\n        personList = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, this.state.persons.map(function (p, index) {\n          return React.createElement(Person, {\n            name: p.name,\n            age: p.age,\n            click: function click() {\n              return _this2.deletePersonHandler(index);\n            },\n            key: p.id,\n            changed: function changed(event) {\n              return _this2.changeNameHandler(event, p.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          });\n        }));\n        btnStyle.backgroundColor = 'red';\n        btnStyle[':hover'] = {\n          backgroundColor: 'lightred',\n          color: 'black'\n        };\n      }\n\n      return React.createElement(StyleRoot, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Hi, I'm a React App\"), React.createElement(\"p\", {\n        className: classs.join(' '),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"This is really working!\"), React.createElement(\"button\", {\n        style: btnStyle,\n        onClick: this.toggelShowPesrons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"toggel show persons\"), personList)); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/projects/class-based/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","changeNameHandler","event","personIndex","findIndex","p","person","target","value","setState","toggelShowPesrons","isShow","splice","btnStyle","backgroundColor","color","font","border","padding","cursor","classs","length","push","personList","map","index","deletePersonHandler","join"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,CACP;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,KAAjB;AAAwBC,QAAAA,GAAG,EAAE;AAA7B,OADO,EAEP;AAAEF,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,MAAjB;AAAyBC,QAAAA,GAAG,EAAE;AAA9B,OAFO,EAGP;AAAEF,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,WAAjB;AAA8BC,QAAAA,GAAG,EAAE;AAAnC,OAHO,CADH;AAMNC,MAAAA,UAAU,EAAE,kBANN;AAONC,MAAAA,WAAW,EAAE;AAPP,K;;UAURC,iB,GAAoB,UAACC,KAAD,EAAQN,EAAR,EAAe;AACjC;AACA,UAAMO,WAAW,GAAG,MAAKT,KAAL,CAAWC,OAAX,CAAmBS,SAAnB,CAA6B,UAAAC,CAAC,EAAI;AACpD,eAAOA,CAAC,CAACT,EAAF,KAASA,EAAhB;AACD,OAFmB,CAApB,CAFiC,CAKjC;;;AACA,UAAMU,MAAM,qBACP,MAAKZ,KAAL,CAAWC,OAAX,CAAmBQ,WAAnB,CADO,CAAZ,CANiC,CASjC;;;AACAG,MAAAA,MAAM,CAACT,IAAP,GAAcK,KAAK,CAACK,MAAN,CAAaC,KAA3B,CAViC,CAWjC;;AACA,UAAMb,OAAO,sBAAO,MAAKD,KAAL,CAAWC,OAAlB,CAAb,CAZiC,CAajC;;;AACAA,MAAAA,OAAO,CAACQ,WAAD,CAAP,GAAuBG,MAAvB;;AACA,YAAKG,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACD,K;;UAEDe,iB,GAAoB,YAAM;AACxB,UAAMC,MAAM,GAAG,MAAKjB,KAAL,CAAWM,WAA1B;;AACA,YAAKS,QAAL,CAAc;AACZT,QAAAA,WAAW,EAAE,CAACW;AADF,OAAd;AAGD,K;;;;;;;wCACmBR,W,EAAa;AAC/B,UAAMR,OAAO,sBAAO,KAAKD,KAAL,CAAWC,OAAlB,CAAb;;AACAA,MAAAA,OAAO,CAACiB,MAAR,CAAeT,WAAf,EAA4B,CAA5B;AACA,WAAKM,QAAL,CAAc;AAAEd,QAAAA,OAAO,EAAEA;AAAX,OAAd;AACD;;;6BAEQ;AAAA;;AACP,UAAMkB,QAAQ,GAAG;AACfC,QAAAA,eAAe,EAAE,OADF;AAEfC,QAAAA,KAAK,EAAE,MAFQ;AAGfC,QAAAA,IAAI,EAAE,SAHS;AAIfC,QAAAA,MAAM,EAAE,gBAJO;AAKfC,QAAAA,OAAO,EAAE,KALM;AAMfC,QAAAA,MAAM,EAAE,SANO;AAOf,kBAAU;AACRL,UAAAA,eAAe,EAAE,YADT;AAERC,UAAAA,KAAK,EAAE;AAFC;AAPK,OAAjB;AAYA,UAAMK,MAAM,GAAG,EAAf;;AACA,UAAI,KAAK1B,KAAL,CAAWC,OAAX,CAAmB0B,MAAnB,IAA6B,CAAjC,EAAoC;AAClCD,QAAAA,MAAM,CAACE,IAAP,CAAY,KAAZ;AACD;;AACD,UAAI,KAAK5B,KAAL,CAAWC,OAAX,CAAmB0B,MAAnB,IAA6B,CAAjC,EAAoC;AAClCD,QAAAA,MAAM,CAACE,IAAP,CAAY,MAAZ;AACD;;AACD,UAAIC,UAAU,GAAG,IAAjB;;AACA,UAAI,KAAK7B,KAAL,CAAWM,WAAf,EAA4B;AAC1BuB,QAAAA,UAAU,GACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK7B,KAAL,CAAWC,OAAX,CAAmB6B,GAAnB,CAAuB,UAACnB,CAAD,EAAIoB,KAAJ,EAAc;AACpC,iBACE,oBAAC,MAAD;AACE,YAAA,IAAI,EAAEpB,CAAC,CAACR,IADV;AAEE,YAAA,GAAG,EAAEQ,CAAC,CAACP,GAFT;AAGE,YAAA,KAAK,EAAE;AAAA,qBAAM,MAAI,CAAC4B,mBAAL,CAAyBD,KAAzB,CAAN;AAAA,aAHT;AAIE,YAAA,GAAG,EAAEpB,CAAC,CAACT,EAJT;AAKE,YAAA,OAAO,EAAE,iBAAAM,KAAK;AAAA,qBAAI,MAAI,CAACD,iBAAL,CAAuBC,KAAvB,EAA8BG,CAAC,CAACT,EAAhC,CAAJ;AAAA,aALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD,SAVA,CADH,CADF;AAeAiB,QAAAA,QAAQ,CAACC,eAAT,GAA2B,KAA3B;AACAD,QAAAA,QAAQ,CAAC,QAAD,CAAR,GAAqB;AACnBC,UAAAA,eAAe,EAAE,UADE;AAEnBC,UAAAA,KAAK,EAAE;AAFY,SAArB;AAID;;AACD,aACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,EAEE;AAAG,QAAA,SAAS,EAAEK,MAAM,CAACO,IAAP,CAAY,GAAZ,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFF,EAGE;AAAQ,QAAA,KAAK,EAAEd,QAAf;AAAyB,QAAA,OAAO,EAAE,KAAKH,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHF,EAMGa,UANH,CADF,CADF,CA3CO,CAuDP;AACD;;;;EAjGehC,S;;AAoGlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: '1', name: 'Max', age: 28 },\n      { id: '2', name: 'Manu', age: 29 },\n      { id: '3', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  };\n\n  changeNameHandler = (event, id) => {\n    // find index by id\n    const personIndex = this.state.persons.findIndex(p => {\n      return p.id === id;\n    });\n    //get copy of person from state by index\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n    //set new value for name\n    person.name = event.target.value;\n    //get copy of person object fom state\n    const persons = [...this.state.persons];\n    //get\n    persons[personIndex] = person;\n    this.setState({ persons: persons });\n  };\n\n  toggelShowPesrons = () => {\n    const isShow = this.state.showPersons;\n    this.setState({\n      showPersons: !isShow\n    });\n  };\n  deletePersonHandler(personIndex) {\n    const persons = [...this.state.persons];\n    persons.splice(personIndex, 1);\n    this.setState({ persons: persons });\n  }\n\n  render() {\n    const btnStyle = {\n      backgroundColor: 'green',\n      color: '#fff',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    };\n    const classs = [];\n    if (this.state.persons.length <= 2) {\n      classs.push('red');\n    }\n    if (this.state.persons.length <= 1) {\n      classs.push('bold');\n    }\n    let personList = null;\n    if (this.state.showPersons) {\n      personList = (\n        <div>\n          {this.state.persons.map((p, index) => {\n            return (\n              <Person\n                name={p.name}\n                age={p.age}\n                click={() => this.deletePersonHandler(index)}\n                key={p.id}\n                changed={event => this.changeNameHandler(event, p.id)}\n              />\n            );\n          })}\n        </div>\n      );\n      btnStyle.backgroundColor = 'red';\n      btnStyle[':hover'] = {\n        backgroundColor: 'lightred',\n        color: 'black'\n      };\n    }\n    return (\n      <StyleRoot>\n        <div className='App'>\n          <h1>Hi, I'm a React App</h1>\n          <p className={classs.join(' ')}>This is really working!</p>\n          <button style={btnStyle} onClick={this.toggelShowPesrons}>\n            toggel show persons\n          </button>\n          {personList}\n        </div>\n      </StyleRoot>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}